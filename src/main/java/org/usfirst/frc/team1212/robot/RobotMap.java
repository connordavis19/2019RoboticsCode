// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team1212.robot;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

import edu.wpi.cscore.UsbCamera;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


public class RobotMap {
	
	//declare instance variables for actuators and sensors connected to the robot
	
	public static WPI_TalonSRX frontRight;
    public static WPI_TalonSRX rearRight;
	public static WPI_TalonSRX frontLeft;
    public static WPI_TalonSRX rearLeft;
    
    public static WPI_TalonSRX frontLeftSlave;
    public static WPI_TalonSRX frontRightSlave;
    public static WPI_TalonSRX rearLeftSlave;
    public static WPI_TalonSRX rearRightSlave;
    
    public static SpeedControllerGroup leftSide;
    public static SpeedControllerGroup rightSide;
    
    public static DifferentialDrive arcadeDrive;
   
    
    
    public static MecanumDrive mecanumDrive;
   
    public static DoubleSolenoid shiftSol;
    
    public static WPI_TalonSRX leftElevator;
    public static WPI_TalonSRX rightElevator;
    
    public static WPI_TalonSRX rightArm;
    public static WPI_TalonSRX leftArm;
    
    public static WPI_VictorSPX leftHerder;
    public static WPI_VictorSPX rightHerder;
    public static DoubleSolenoid herderSol;
    
    public static DigitalInput topLimit;
    public static DigitalInput bottomLimit;
    

    
    public static ADXRS450_Gyro driveGyro;
    
    public static UsbCamera frontCam;
    public static UsbCamera backCam;
    
    public static SendableChooser<UsbCamera> cameraSelector;
   


    //This method is run when the robot is turned on. Builds all objects for sensors
    //and actuators connected to the robot
    public static void init() {
    	
    	frontLeft = new WPI_TalonSRX(14);
        frontRight = new WPI_TalonSRX(7);
        rearLeft = new WPI_TalonSRX(15);
        rearRight = new WPI_TalonSRX(6);
        
        
        frontLeftSlave = new WPI_TalonSRX(13);
        frontRightSlave = new WPI_TalonSRX(16);
        rearLeftSlave = new WPI_TalonSRX(11);
        rearRightSlave = new WPI_TalonSRX(17);
        
        frontLeftSlave.follow(frontLeft);
        frontRightSlave.follow(frontRight);
        rearLeftSlave.follow(rearLeft);
        rearRightSlave.follow(rearRight);
        
     
        
        leftSide = new SpeedControllerGroup(frontLeft, rearLeft);
        rightSide = new SpeedControllerGroup(frontRight, rearRight);
        arcadeDrive = new DifferentialDrive(leftSide, rightSide);
        
        //this code was commented out in prior versions, 
        // if errors occur in drive train check this code
       arcadeDrive.setSafetyEnabled(true);
       arcadeDrive.setExpiration(0.1);
       arcadeDrive.setMaxOutput(1.0);
        
        mecanumDrive = new MecanumDrive(frontLeft, rearLeft,
              frontRight, rearRight);
      
      //this code was commented out in prior versions, 
        // if errors occur in drive train check this code
      mecanumDrive.setSafetyEnabled(true);
      mecanumDrive.setExpiration(0.1);
      mecanumDrive.setMaxOutput(1.0);
        
        rightArm = new WPI_TalonSRX(3);
        leftArm = new WPI_TalonSRX(10);
        
        rightElevator = new WPI_TalonSRX(2);
        leftElevator = new WPI_TalonSRX(12);
        
        rightHerder = new WPI_VictorSPX(22);
        leftHerder = new WPI_VictorSPX(20);
        herderSol = new DoubleSolenoid(2,3);
        
        topLimit = new DigitalInput(1);
        bottomLimit = new DigitalInput(0);
        
        

        
        driveGyro = new ADXRS450_Gyro();
        SmartDashboard.putData(driveGyro);
        
        

        
        shiftSol = new DoubleSolenoid(0, 1);
        
        frontCam = CameraServer.getInstance().startAutomaticCapture(0); //Tells the cameras to start streaming video
        backCam = CameraServer.getInstance().startAutomaticCapture(1);
        
        cameraSelector = new SendableChooser<>(); //instantiates the sendablechooser
        
    
        
      
    }
}


